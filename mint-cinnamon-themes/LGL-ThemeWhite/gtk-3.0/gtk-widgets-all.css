/***********
 * Borders *
 ***********/

/* generic element borders */
.entry,
GtkComboBox.combobox-entry .entry,
GtkComboBox.combobox-entry .button,
.button:active,
.trough,
.trough.highlight,
GtkSwitch.trough,
/* generic button borders */
.button,
.primary-toolbar .button.raised,
.primary-toolbar .raised .button,
.primary-toolbar GtkComboBox .button,
/* primary toolbar - generic element borders */
.primary-toolbar .entry,
.primary-toolbar GtkComboBox.combobox-entry .entry,
.primary-toolbar GtkComboBox.combobox-entry .button,
.primary-toolbar .button:active,
.primary-toolbar .button.raised:active,
.primary-toolbar .raised .button:active,
.primary-toolbar .button.raised:insensitive,
.primary-toolbar .raised .button:insensitive,
.primary-toolbar GtkSwitch.trough,
.primary-toolbar GtkSwitch.trough:insensitive,
.primary-toolbar GtkComboBox .button:active,
.primary-toolbar GtkComboBox .button:insensitive {
	border-image: url("img/border.png") 3 3 4 3 / 3px 3px 4px 3px repeat;
	border-radius: 1px;
	border-width: 1px 1px 2px 1px;
	border-style: solid;
	border-color: transparent;
} 

.primary-toolbar .entry,
.primary-toolbar GtkComboBox.combobox-entry .entry {
	border-width: 1px 2px 2px;
}

.primary-toolbar .entry:focus,
.primary-toolbar GtkComboBox.combobox-entry .entry:focus {
	border-width: 1px 2px 2px;
}

/* linked buttons */
/* Middle button */
.linked .entry,
.linked .button,
.linked .button:active,
.linked .button:active:hover,
.linked .button:focus,
.linked .button:focus:active,
.linked .button:insensitive,
/* Leftmost button */
.linked .entry:first-child,
.linked .button:first-child,
.linked .button:active:first-child,
.linked .button:active:hover:first-child,
.linked .button:focus:first-child,
.linked .button:focus:active:first-child,
.linked .button:insensitive:first-child,
/* Rightmost button */
.linked .entry:last-child,
.linked .button:last-child,
.linked .button:active:last-child,
.linked .button:active:hover:last-child,
.linked .button:focus:last-child,
.linked .button:focus:active:last-child,
.linked .button:insensitive:last-child,
/* Linked single button */
.linked .entry:only-child,
.linked .button:only-child,
.linked .button:active:only-child,
.linked .button:active:hover:only-child,
.linked .button:focus:only-child,
.linked .button:focus:active:only-child,
.linked .button:insensitive:only-child,
/* Middle button (vertical) */
.linked.vertical .entry,
.linked.vertical .button,
.linked.vertical .button:active,
.linked.vertical .button:active:hover,
.linked.vertical .button:focus,
.linked.vertical .button:focus:active,
.linked.vertical .button:insensitive,
/* Top button (vertical) */
.linked.vertical .entry:first-child,
.linked.vertical .button:first-child,
.linked.vertical .button:active:first-child,
.linked.vertical .button:active:hover:first-child,
.linked.vertical .button:focus:first-child,
.linked.vertical .button:focus:active:first-child,
.linked.vertical .button:insensitive:first-child,
/* Bottom button (vertical) */
.linked.vertical .entry:last-child,
.linked.vertical .button:last-child,
.linked.vertical .button:active:last-child,
.linked.vertical .button:active:hover:last-child,
.linked.vertical .button:focus:last-child,
.linked.vertical .button:focus:active:last-child,
.linked.vertical .button:insensitive:last-child,
/* Linked single button (vertical) */
.linked.vertical .entry:only-child,
.linked.vertical .button:only-child,
.linked.vertical .button:active:only-child,
.linked.vertical .button:active:hover:only-child,
.linked.vertical .button:focus:only-child,
.linked.vertical .button:focus:active:only-child,
.linked.vertical .button:insensitive:only-child,
/* Linked buttons on primary toolbars */
/* Middle button */
.primary-toolbar .button.raised.linked,
.primary-toolbar .button.raised.linked:active,
.primary-toolbar .button.raised.linked:focus,
.primary-toolbar .button.raised.linked:focus:active,
.primary-toolbar .button.raised.linked:insensitive,
.primary-toolbar .raised.linked .button,
.primary-toolbar .raised.linked .button:active,
.primary-toolbar .raised.linked .button:focus,
.primary-toolbar .raised.linked .button:focus:active,
.primary-toolbar .raised.linked .button:insensitive,
.inline-toolbar.toolbar .button,
.inline-toolbar.toolbar .button:active,
.inline-toolbar.toolbar .button:focus,
.inline-toolbar.toolbar .button:focus:active,
.inline-toolbar.toolbar .button:insensitive,
.inline-toolbar.toolbar GtkToolButton .button,
.inline-toolbar.toolbar GtkToolButton .button:active,
.inline-toolbar.toolbar GtkToolButton .button:focus,
.inline-toolbar.toolbar GtkToolButton .button:focus:active,
.inline-toolbar.toolbar GtkToolButton .button:insensitive,
/* Leftmost button */
.primary-toolbar .button.raised.linked:first-child,
.primary-toolbar .button.raised.linked:active:first-child,
.primary-toolbar .button.raised.linked:focus:first-child,
.primary-toolbar .button.raised.linked:focus:active:first-child,
.primary-toolbar .button.raised.linked:insensitive:first-child,
.primary-toolbar .raised.linked .button:first-child,
.primary-toolbar .raised.linked .button:active:first-child,
.primary-toolbar .raised.linked .button:focus:first-child,
.primary-toolbar .raised.linked .button:focus:active:first-child,
.primary-toolbar .raised.linked .button:insensitive:first-child,
.inline-toolbar.toolbar .button:first-child,
.inline-toolbar.toolbar .button:active:first-child,
.inline-toolbar.toolbar .button:focus:first-child,
.inline-toolbar.toolbar .button:focus:active:first-child,
.inline-toolbar.toolbar .button:insensitive:first-child,
.inline-toolbar.toolbar GtkToolButton:first-child .button,
.inline-toolbar.toolbar GtkToolButton:first-child .button:active,
.inline-toolbar.toolbar GtkToolButton:first-child .button:focus,
.inline-toolbar.toolbar GtkToolButton:first-child .button:focus:active,
.inline-toolbar.toolbar GtkToolButton:first-child .button:insensitive,
/* Rightmost button */
.primary-toolbar .button.raised.linked:last-child,
.primary-toolbar .button.raised.linked:active:last-child,
.primary-toolbar .button.raised.linked:focus:last-child,
.primary-toolbar .button.raised.linked:focus:active:last-child,
.primary-toolbar .button.raised.linked:insensitive:last-child,
.primary-toolbar .raised.linked .button:last-child,
.primary-toolbar .raised.linked .button:active:last-child,
.primary-toolbar .raised.linked .button:focus:last-child,
.primary-toolbar .raised.linked .button:focus:active:last-child,
.primary-toolbar .raised.linked .button:insensitive:last-child,
.inline-toolbar.toolbar .button:last-child,
.inline-toolbar.toolbar .button:active:last-child,
.inline-toolbar.toolbar .button:focus:last-child,
.inline-toolbar.toolbar .button:focus:active:last-child,
.inline-toolbar.toolbar .button:insensitive:last-child,
.inline-toolbar.toolbar GtkToolButton:last-child .button,
.inline-toolbar.toolbar GtkToolButton:last-child .button:active,
.inline-toolbar.toolbar GtkToolButton:last-child .button:focus,
.inline-toolbar.toolbar GtkToolButton:last-child .button:focus:active,
.inline-toolbar.toolbar GtkToolButton:last-child .button:insensitive,
/* Single button */
.inline-toolbar.toolbar .button:only-child,
.inline-toolbar.toolbar .button:active:only-child,
.inline-toolbar.toolbar .button:focus:only-child,
.inline-toolbar.toolbar .button:focus:active:only-child,
.inline-toolbar.toolbar .button:insensitive:only-child,
.inline-toolbar.toolbar GtkToolButton:only-child .button,
.inline-toolbar.toolbar GtkToolButton:only-child .button:active,
.inline-toolbar.toolbar GtkToolButton:only-child .button:focus,
.inline-toolbar.toolbar GtkToolButton:only-child .button:focus:active,
.inline-toolbar.toolbar GtkToolButton:only-child .button:insensitive {
	border-image: url("img/border-inline-button.png") 3 3 4 3 / 3px 3px 4px 3px repeat;
	border-radius: 1px;
	border-width: 1px 1px 2px 1px;
	border-style: solid;
	border-color: transparent;
}

/* generic insensitive element borders */
GtkSwitch.trough:insensitive,
GtkComboBox.combobox-entry .entry:insensitive,
GtkComboBox.combobox-entry .button:insensitive,
.entry:insensitive,
.button:insensitive,
.trough row {
	border-image: url("img/border-insensitive.png") 3 3 4 3 / 3px 3px 4px 3px repeat;
	border-radius: 1px;
	border-width: 1px 1px 2px 1px;
	border-style: solid;
	border-color: transparent;
}

/* focused element borders */
.entry:focus,
GtkComboBox.combobox-entry .entry:focus,
.button:focus:active,
.button.default:active,
/* focused button borders */
.button:focus,
.button.default,
.primary-toolbar .entry:focus,
.primary-toolbar .button:active:focus,
.primary-toolbar GtkComboBox.combobox-entry .entry:focus,
.primary-toolbar GtkComboBox.combobox-entry .button:focus,
.primary-toolbar .button.raised:focus:active,
.primary-toolbar .raised .button:focus:active,
.primary-toolbar .button.raised.default:active,
.primary-toolbar .raised .button.default:active,
.primary-toolbar GtkComboBox .button:active:focus,
.primary-toolbar .button.raised:focus,
.primary-toolbar .button.raised.default,
.primary-toolbar .raised .button:focus,
.primary-toolbar .raised .button.default,
.primary-toolbar GtkComboBox .button:focus {
	border-image: url("img/border-focused.png") 3 3 4 3 / 3px 3px 4px 3px repeat;
	border-radius: 1px;
	border-width: 1px 1px 2px 1px;
	border-style: solid;
	border-color: transparent;
}

/* focused switch trough borders */
GtkSwitch.trough:active {
	border-image: url("img/border-focused-switch.png") 3 3 4 3 / 3px 3px 4px 3px repeat;
	border-radius: 3px;
	border-width: 1px 1px 2px 1px;
	border-style: solid;
	border-color: transparent;
}

/* Use different button and entry borders on infobars */
GtkInfoBar .entry,
GtkInfoBar .entry:focus,
GtkInfoBar .button,
GtkInfoBar .button:insensitive,
GtkInfoBar .button:active,
GtkInfoBar .button:focus,
GtkInfoBar .button:active:focus,
.info .entry,
.info .entry:focus,
.info .button,
.info .button:insensitive,
.info .button:active,
.info .button:focus,
.info .button:active:focus,
.warning .entry,
.warning .entry:focus,
.warning .button,
.warning .button:insensitive,
.warning .button:active,
.warning .button:focus,
.warning .button:active:focus,
.question .entry,
.question .entry:focus,
.question .button,
.question .button:insensitive,
.question .button:active,
.question .button:focus,
.question .button:active:focus,
.error .entry,
.error .entry:focus,
.error .button,
.error .button:insensitive,
.error .button:active,
.error .button:focus,
.error .button:active:focus {
	border-image: none;
	border-color: shade(@border_color, 0.9);
	border-style: solid;
	border-width: 1px;
}

GtkInfoBar:last-child,
.info:last-child,
.warning:last-child,
.question:last-child,
.error:last-child {
	border-bottom-width: 1px;
	border-style: solid;
}

.info {
	background-color: @info_bg_color;
	color: @info_fg_color;
	border-color: @theme_bg_color;
}

.warning {
	background-color: @warning_bg_color;
	color: @warning_fg_color;
	border-color: darker(@warning_bg_color);
}

.question {
	background-color: @question_bg_color;
	color: @question_fg_color;
	border-color: darker(@question_bg_color);
}

.error {
	background-color: @error_bg_color;
	color: @error_fg_color;
	border-color: darker(@error_bg_color);
}

.view.dim-label,
.dim-label,
.dim-label:hover,
.dim-label:focus {
	color: mix(@theme_fg_color, @theme_bg_color, 0.50);
}

.dim-label:selected,
.dim-label:selected:focus {
	color: mix(@theme_selected_fg_color, @theme_base_color, 0.50);
}

/****************
 * Radiobuttons *
 ****************/

.check,
.radio,
.check:insensitive,
.radio:insensitive {
	background-color: transparent;
	border-style: none;
}

.check row:selected:insensitive,
.check row:selected:focus:insensitive {
	background-color: transparent;
}

GtkCheckButton:hover,
GtkCheckButton:active:hover,
GtkCheckButton:selected,
GtkCheckButton:selected:focus {
	background-color: transparent;
}


/****************************
 * Check and Radio items img*
 ****************************/

.check,
.check row:selected,
.check row:selected:focus {
	background-image: url("img/checkbox-unchecked.png");
}

.check:hover,
.check row:selected:hover,
.check row:selected:focus:hover {
	background-image: url("img/checkbox-unchecked-hover.png");
}

.check:insensitive,
.check row:selected:insensitive,
.check row:selected:focus:insensitive {
	background-image: url("img/checkbox-unchecked-insensitive.png");
}

.check:active,
.check row:selected:active,
.check row:selected:focus:active {
	background-image: url("img/checkbox-checked.png");
}

.check:active:hover,
.check row:selected:active:hover,
.check row:selected:focus:active:hover {
	background-image: url("img/checkbox-checked-hover.png");
}

.check:active:insensitive,
.check row:selected:active:insensitive,
.check row:selected:focus:active:insensitive {
	background-image: url("img/checkbox-checked-insensitive.png");
}

.check:inconsistent,
.check row:selected:inconsistent,
.check row:selected:focus:inconsistent {
	background-image: url("img/checkbox-mixed.png");
}

.check:inconsistent:hover,
.check row:selected:inconsistent:hover,
.check row:selected:focus:inconsistent:hover {
	background-image: url("img/checkbox-mixed-hover.png");
}

.check:inconsistent:insensitive,
.check row:selected:inconsistent:insensitive,
.check row:selected:focus:inconsistent:insensitive {
	background-image: url("img/checkbox-mixed-insensitive.png");
}

.radio,
.radio row:selected,
.radio row:selected:focus {
	background-image: url("img/radio-unchecked.png");
}

.radio:hover,
.radio row:selected:hover,
.radio row:selected:focus:hover {
	background-image: url("img/radio-unchecked-hover.png");
}

.radio:insensitive,
.radio row:selected:insensitive,
.radio row:selected:focus:insensitive {
	background-image: url("img/radio-unchecked-insensitive.png");
}

.radio:active,
.radio row:selected:active,
.radio row:selected:focus:active {
	background-image: url("img/radio-checked.png");
}

.radio:active:hover,
.radio row:selected:active:hover,
.radio row:selected:focus:active:hover {
	background-image: url("img/radio-checked-hover.png");
}

.radio:active:insensitive,
.radio row:selected:active:insensitive,
.radio row:selected:focus:active:insensitive {
	background-image: url("img/radio-checked-insensitive.png");
}

.radio:inconsistent,
.radio row:selected:inconsistent,
.radio row:selected:focus:inconsistent {
	background-image: url("img/radio-mixed.png");
}

.radio:inconsistent:hover,
.radio row:selected:inconsistent:hover,
.radio row:selected:focus:inconsistent:hover {
	background-image: url("img/radio-mixed-hover.png");
}

.radio:inconsistent:insensitive,
.radio row:selected:inconsistent:insensitive,
.radio row:selected:focus:inconsistent:insensitive {
	background-image: url("img/radio-mixed-insensitive.png");
}

/*****************
 * column-header *
 *****************/

column-header.button,
column-header .button {
	color: @theme_clear_fg_color;
}

column-header.button,
column-header .button,
column-header.button:insensitive,
column-header .button:insensitive {
	background-color: @theme_base_color;
	background-image: -gtk-gradient(linear, left top, left bottom, from(@core_color_b), to(@core_color_b));
	padding: 4px 4px;
	font-weight: normal;
}

column-header.button:insensitive,
column-header .button:insensitive {
	background-color: @insensitive_bg_color;
	background-image: none;
	border-image: none;
}

column-header.button:hover,
column-header .button:hover {
	background-color: @theme_base_color;
	background-image: none;
}

column-header.button:active,
column-header .button:active,
column-header.button:active:hover,
column-header .button:active:hover,
column-header.button:active:hover:focus,
column-header .button:active:hover:focus,
column-header.button:active:focus,
column-header .button:active:focus {
	background-color: @theme_base_color;
	background-image: none;
}

/* column-headers borders */
column-header.button,
column-header .button,
column-header.button:focus,
column-header .button:focus,
column-header.button:active,
column-header .button:active,
column-header.button:active:hover,
column-header .button:active:hover
column-header.button:active:focus,
column-header .button:active:focus {
	border-image: url("img/headers-border.png") 1 1 1 1 / 1px 1px 1px 1px;
	border-radius: 1px;
	border-width: 1px 1px 1px 1px;
	border-style: solid;
	border-color: transparent; 
}

column-header.button:last-child,
column-header:last-child .button,
column-header.button:last-child:focus,
column-header:last-child .button:focus,
column-header.button:last-child:active,
column-header:last-child .button:active,
column-header.button:last-child:active:hover,
column-header:last-child .button:active:hover,
column-header.button:last-child:active:focus,
column-header:last-child .button:active:focus {
	border-image: none;
	border-right: none;
}

/*********
 * Menus *
 *********/

/* combobox menus */
GtkTreeMenu.menu {
	background-color: @theme_base_color;
}

GtkTreeMenu .menuitem {
	padding: 2px;
}

GtkTreeMenu .menuitem * {
	color: @theme_text_color;
}

.menu {
	background-color: @menu_bg_color;
	color: @theme_fg_color;
	padding: 1px;
	border-style: solid;
	border-width: 1px;
	border-color: shade(@core_color_b, 0.72);
}

.menu.button {
	background-image: none;
	background-color: @theme_base_color;
	color: @internal_element_color;
	border-image: none;
	border-style: none;
}

.menu.button:hover {
	background-image: none;
	background-color: @theme_base_color;
	color: @theme_text_color;
	border-image: none;
	border-style: none;
}

.menu.button:insensitive {
	background-color: @theme_base_color;
	color: lighter(@internal_element_color);
	border-image: none;
	border-style: none;
}

.menubar {
	-GtkWidget-window-dragging: true;
	-GtkMenuBar-internal-padding: 1;
	border-style: none;
	padding: 4px;
	color: @theme_fg_color;
	background-image: -gtk-gradient(linear, left top, left bottom, from(@theme_bg_color), to(@theme_bg_color));
}

.menubar .menuitem {
	background-color: @theme_bg_color;
	border-style: none;
	padding: 3px 5px;
}

.menubar .menuitem:hover {
	background-color: @menu_bg_color;
	border-style: none;
	border-width: 1px 1px 0px;
	border-color: @core_color_a;
	border-radius: 0 0 0 0;
	background-image: -gtk-gradient(linear, left top, left bottom, from(@core_color_a), to(@core_color_a));
}

.menubar .menuitem *:hover {
	border-width: 1px;
	color: @theme_fg_color;
}

.menu .menuitem {
	-GtkMenuItem-arrow-scaling: 0.7;
	padding: 4px;
}

.menu .menuitem:hover {
	border-radius: 0;
}

GtkTreeMenu .menuitem:hover,
.menu .menuitem:active,
.menu .menuitem:hover {
	border-style: solid;
	border-width: 1px;
	border-color: @core_color_a;
	background-image: -gtk-gradient(linear, left top, left bottom, from(@core_color_a), to(@core_color_a));
}

GtkTreeMenu .menuitem *:hover,
.menu .menuitem:active,
.menu .menuitem *:active,
.menu .menuitem:hover,
.menu .menuitem *:hover {
	color: @theme_selected_fg_color;
}

.menu .menuitem:insensitive,
.menu .menuitem *:insensitive {
	color: mix(@theme_fg_color, @menu_bg_color, 0.6);
}

.menu .menuitem .accelerator:insensitive {
	color: mix(@theme_fg_color, @menu_bg_color, 0.7);
}

.menuitem .accelerator {
	color: alpha(@theme_fg_color, 0.4);
}

.menuitem .accelerator:hover,
.menuitem .accelerator:active {
	color: alpha(@theme_fg_color, 0.3);
}

.menuitem.arrow {
	color: @theme_fg_color;
}

.menuitem.check,
.menuitem.radio,
.menuitem.check:hover,
.menuitem.radio:hover,
.menuitem.check:insensitive,
.menuitem.radio:insensitive {
	background-image: none;
	background-color: transparent;
}

.menuitem.check:active,
.menuitem.radio:active {
	background-color: transparent;
}

/***************
 * Menu Button *
 ***************/

.button.menuitem.menubar:active,
.button.menuitem.menubar *:active {
	color: @theme_text_color;
	background-image: none;
	background-color: @menu_bg_color;
	border-radius: 0 0 0 0;
	border-image: none;
	border-width: 1px 1px 0 1px;
	border-color: shade(@border_color, 1.30);
	border-style: none;
}

/****************
 * Menus images *
 ****************/

.menu .menuitem.check {
	background-image: url("img/menuitem-checkbox.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:hover {
	background-image: url("img/menuitem-checkbox-hover.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:insensitive {
	background-image: url("img/menuitem-checkbox-insensitive.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:active {
	background-image: url("img/menuitem-checkbox-checked.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:active:hover {
	background-image: url("img/menuitem-checkbox-checked-hover.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:active:insensitive {
	background-image: url("img/menuitem-checkbox-checked-insensitive.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:inconsistent,
.menu .menuitem.radio:inconsistent {
	background-image: url("img/menuitem-checkbox-mixed.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:inconsistent:hover,
.menu .menuitem.radio:inconsistent:hover {
	background-image: url("img/menuitem-checkbox-mixed-hover.png");
	background-repeat: no-repeat;
}

.menu .menuitem.check:inconsistent:insensitive,
.menu .menuitem.radio:inconsistent:insensitive {
	background-image: url("img/menuitem-checkbox-mixed-insensitive.png");
	background-repeat: no-repeat;
}

.menu .menuitem.radio {
	background-image: url("img/menuitem-radio.png");
	background-repeat: no-repeat;
}

.menu .menuitem.radio:hover {
	background-image: url("img/menuitem-radio-hover.png");
	background-repeat: no-repeat;
}

.menu .menuitem.radio:insensitive {
	background-image: url("img/menuitem-radio-insensitive.png");
	background-repeat: no-repeat;
}

.menu .menuitem.radio:active {
	background-image: url("img/menuitem-radio-checked.png");
	background-repeat: no-repeat;
}

.menu .menuitem.radio:active:hover {
	background-image: url("img/menuitem-radio-checked-hover.png");
	background-repeat: no-repeat;
}

.menu .menuitem.radio:active:insensitive {
	background-image: url("img/menuitem-radio-checked-insensitive.png");
	background-repeat: no-repeat;
}

/**********************
 * Notebooks and tabs *
 **********************/

.notebook {
	-GtkNotebook-tab-overlap: -1px;
	-GtkNotebook-tab-curvature: 1;
	-GtkNotebook-initial-gap: 0;
	padding: 0;
	border-color: @border_color;
	border-style: solid;
	border-width: 1px;
	background-clip: border-box;
	background-color: @core_color_b;
}

.notebook tab {
	border-radius: 1px;
	border-style: solid;
	padding: 2px 2px 0 2px;
	border-width: 1px 1px 0;
	background-color: shade(@theme_bg_color, 0.95);
}

.notebook tab:active {
	padding: 2px 2px 0 2px;
	border-width: 1px 1px 0px;
	background-color: @theme_base_color;
}

/* close button styling */
.notebook tab .button,
.notebook tab .button:active {
	border-image: none;
	border-style: none;
	background-image: none;
	background-color: transparent;
}
.notebook tab .button:hover {
	background-color: rgba(255,0,0,0.3);
}

.notebook tab .button GtkImage {
	border-radius: 1px;
	color: mix(@theme_fg_color, @theme_base_color, 0.6);
	border-style: solid;
	border-color: transparent;
	border-width: 1px;
	padding: 0;
}

.notebook tab .button GtkImage:hover {
	color: @theme_fg_color;
	border-color: transparent;
}

.notebook tab .button GtkImage:active,
.notebook tab .button GtkImage:active:hover {
	background-color: transparent;
	color:  @theme_base_color;
	border-color: transparent;
}

/****************
 * Progress bar *
 ****************/

GtkProgressBar {
	padding: 0 0 0 0;
}

.progressbar,
.progressbar row,
.progressbar row:hover,
.progressbar row:selected,
.progressbar row:selected:focus {
	background-color: @progressbar_bg_color;
	background-image: linear-gradient(to bottom, @progressbar_bg_color, @progressbar_bg_color);
	border-style: solid;
	border-color: transparent;
	border-radius: 1px;
	border-width: 1px;
}

.progressbar row:selected,
.progressbar row:selected:focus {
	border-color: transparent;
}

.progressbar.vertical {
	background-image: linear-gradient(to right, @progressbar_bg_color, @progressbar_bg_color);
}

.trough row {
	padding: 0;
}

.trough,
.trough row,
.trough row:hover,
.trough row:selected,
.trough row:selected:focused {
	background-image: -gtk-gradient (linear, left top, left bottom, from (@core_color_b), to (@core_color_b));
    border-style: solid;
    border-width: 1px;
    color: @theme_text_color;
}

/************
 * GtkScale *
 ************/

GtkScale {
	-GtkScale-slider-length: 21;
	-GtkRange-slider-width: 13;
	-GtkRange-trough-border: 3;
	-GtkWidget-focus-line-width: 0;
}

GtkScale.slider,
GtkScale.slider:hover,
GtkScale.slider:insensitive {
	border-radius: 0;
	border-style: none;
	background-color: transparent;
}

GtkScale.trough,
GtkScale.trough.highlight,
GtkScale.trough.vertical,
GtkScale.trough:insensitive {
	border-image: none;
	border-style: solid;
	border-width: 1px;
	border-radius: 1px;
	background-image: none;
}

GtkScale.trough {
	margin: 8px 0;
	border-color: shade(@core_color_b, 0.86);
	background-color: shade(@core_color_b, 0.80);
}

GtkScale.trough.vertical {
	margin: 0 8px;
}

GtkScale.trough.highlight {
	border-color: @progressbar_bg_color;
	background-color: @progressbar_bg_color;
}

GtkScale.trough:insensitive {
	border-color: @insensitive_border_color;
	background-color: @insensitive_border_color;
}

GtkScale.trough.highlight:insensitive {
	border-color: @insensitive_border_color;
	background-color: @insensitive_border_color;
}

GtkScale.progressbar {
	background-color: @theme_selected_bg_color;
}

/*GtkScale.mark {
	color: shade(@border_color, 0.5);
}*/

/************************
 * GtkScale's slider img*
 ************************/
 
GtkScale.slider,
GtkScale.slider.horizontal {
	background-image: url("img/scale-slider-horz.png");
}

GtkScale.slider:hover,
GtkScale.slider.horizontal:hover {
	background-image: url("img/scale-slider-horz-hover.png");
}

GtkScale.slider:insensitive,
GtkScale.slider.horizontal:insensitive {
	background-image: url("img/scale-slider-horz-insensitive.png");
}

GtkScale.slider.vertical {
	background-image: url("img/scale-slider-vert.png");
}

GtkScale.slider.vertical:hover {
	background-image: url("img/scale-slider-vert-hover.png");
}

GtkScale.slider.vertical:insensitive {
	background-image: url("img/scale-slider-vert-insensitive.png");
}

GtkScale.scale-has-marks-above.slider.horizontal {
	background-image: url("img/scale-slider-horz.png");
}

GtkScale.scale-has-marks-above.slider.horizontal:hover {
	background-image: url("img/scale-slider-horz-hover.png");
}

GtkScale.scale-has-marks-above.slider.horizontal:insensitive {
	background-image: url("img/scale-slider-horz-insensitive.png");
}

GtkScale.scale-has-marks-above.slider.vertical {
	background-image: url("img/scale-slider-vert.png");
}

GtkScale.scale-has-marks-above.slider.vertical:hover {
	background-image: url("img/scale-slider-vert-hover.png");
}

GtkScale.scale-has-marks-above.slider.vertical:insensitive {
	background-image: url("img/scale-slider-vert-insensitive.png");
}

GtkScale.scale-has-marks-below.slider.horizontal {
	background-image: url("img/scale-slider-horz.png");
}

GtkScale.scale-has-marks-below.slider.horizontal:hover {
	background-image: url("img/scale-slider-horz-hover.png");
}

GtkScale.scale-has-marks-below.slider.horizontal:insensitive {
	background-image: url("img/scale-slider-horz-insensitive.png");
}

GtkScale.scale-has-marks-below.slider.vertical {
	background-image: url("img/scale-slider-vert.png");
}

GtkScale.scale-has-marks-below.slider.vertical:hover {
	background-image: url("img/scale-slider-vert-hover.png");
}

GtkScale.scale-has-marks-below.slider.vertical:insensitive {
	background-image: url("img/scale-slider-vert-insensitive.png");
}

/*************
 * scrollbar *
 *************/

.scrollbar {
	-GtkRange-trough-border: 0;
	-GtkScrollbar-has-backward-stepper: false;
	-GtkScrollbar-has-forward-stepper: false;
	-GtkRange-arrow-scaling: 0.6;
	-GtkRange-slider-width: 15;
	-GtkRange-stepper-size: 15px;
	-GtkScrollbar-min-slider-length: 30;
	-GtkRange-stepper-spacing: 0;
	-GtkRange-trough-under-steppers: 0;
	background-image: none;
	border-style: none;
}

.scrollbars-junction {
	background-image: none;
	background-color: @theme_bg_color;
}

.scrollbars-junction,
.scrollbar.trough {
	border-color: @scrollbar_trough_color;
	border-radius: 0;
	border-image: none;
}

.scrollbar.trough.horizontal {
	border-width: 1px 0px;
	background-image: -gtk-gradient(linear, left top, left bottom, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.trough.vertical {
	border-width: 0px 1px;
	background-image: -gtk-gradient(linear, left top, right top, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.slider {
	background-color: shade(@core_color_b, 0.83);
	background-image: none;
	border-radius: 0;
	border-style: none;
	border-image: none;
	border-color: shade(@core_color_b, 0.83);
	border-width: 1px;
}

.scrollbar.slider:hover {
	background-color: shade(@core_color_b, 0.66);
}

.scrollbar.slider {
	background-repeat: no-repeat;
	background-position: center center;
}

.scrollbar.slider.vertical {
	background-image: none;
}

.scrollbar.slider.horizontal {
	background-image: none;
}

.scrollbar.slider.vertical:hover {
	background-image: none;
}

.scrollbar.slider.horizontal:hover {
	background-image: none;
}

.scrollbar.button {
	border-style: none;
	border-width: 0;
	border-image: none;
	border-color: transparent;
	background-image: none;
	background-color: @scrollbar_trough_color;
	color: shade(@theme_bg_color, 0.5);
}

.scrollbar.button.top {
	border-radius: 3px 3px 0px 0px;
}

.scrollbar.button.bottom {
	border-radius: 0px 0px 3px 3px;
}

.scrollbar.button.left {
	border-radius: 3px 0px 0px 3px;
}

.scrollbar.button.right {
	border-radius: 0px 3px 3px 0px;
}

.scrollbar.button.horizontal {
	background-image: -gtk-gradient(linear, left top, left bottom, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.button.vertical {
	background-image: -gtk-gradient(linear, left top, right top, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.button.horizontal:hover {
	background-image: -gtk-gradient(linear, left top, left bottom, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.button.vertical:hover {
	background-image: -gtk-gradient(linear, left top, right top, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.button.horizontal:active {
	background-image: -gtk-gradient(linear, left top, left bottom, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.button.vertical:active {
	background-image: -gtk-gradient(linear, left top, right top, from(@scrollbar_trough_color), to(@scrollbar_trough_color));
}

.scrollbar.button:insensitive {
	color: shade(@theme_bg_color, 0.5);
}

.scrollbar.button.top:insensitive {
	border-bottom: none;
}

.scrollbar.button.bottom:insensitive {
	border-top: none;
}

.scrollbar.button.left:insensitive {
	border-right: none;
}

.scrollbar.button.right:insensitive {
	border-left: none;
}

/* overlay scrollbar */
OsThumb {
    color: shade(@core_color_b, 0.66);
}

OsThumb:selected,
GtkScrollbar:selected {
    background-color: @scrollbars_os_color;
}

OsThumb:active,
GtkScrollbar:active {
    background-color: @ov_scrollbar_trough_color;
}

OsThumb:insensitive,
GtkScrollbar:insensitive {
    background-color: @ov_scrollbar_trough_color;
}

/***********
 * toolbar *
 ***********/

.toolbar {
	border-style: none;
	border-color: darker(@theme_bg_color);
	padding: 1px;
}

.toolbar .button {
	/*padding: 1px;*/
}

.toolbar:insensitive {
	color: alpha(@theme_fg_color, 0.6);
}

/********************
 * Primary Toolbars *
 ********************/

.primary-toolbar .toolbar,
.primary-toolbar.toolbar,
.menubar.toolbar,
.header-bar {
	-GtkWidget-window-dragging: true;
	-GtkToolbar-button-relief: normal;
    border-style: none;
}

.primary-toolbar .toolbar:insensitive,
.primary-toolbar.toolbar:insensitive {
	background-image: none;
	background-color: shade(@theme_bg_color, 0.97);
	border-color: shade(@theme_bg_color, 0.91);
}

.primary-toolbar .toolbar .entry.progressbar,
.primary-toolbar.toolbar .entry.progressbar {
	background-image: -gtk-gradient(linear, left top, left bottom, from(@trough_gradient_a), to(@trough_gradient_b));
	border-width: 1px;
	border-radius: 2px;
	border-style: solid;
	border-color: shade(@internal_element_color, 1.10);
	border-image: none;
	color: @theme_text_color;
}

/*******************
 * Inline toolbars *
 *******************/

.inline-toolbar.toolbar {
	-GtkToolbar-button-relief: normal;
	border-width: 0 1px 1px 1px;
	border-style: solid;
	border-radius: 3px;
	border-top-right-radius: 0;
	border-top-left-radius: 0;
	padding: 3px 4px 4px 4px;
}

/* Primary and inline toolbars background */
.primary-toolbar .toolbar,
.primary-toolbar.toolbar,
.inline-toolbar.toolbar  {
	background-color: transparent;
	background-image: linear-gradient(to bottom, @theme_bg_color);
}

.inline-toolbar.toolbar .button {
	padding: 4px;
}

.inline-toolbar.toolbar:last-child {
	border-width: 0 0 0 0;
	border-radius: 0 0 0 0;
}

.inline-toolbar.toolbar .button *:insensitive,
.inline-toolbar.toolbar GtkToolButton .button:insensitive {
}

/***********
 * Buttons *
 ***********/

.button,
.button.menuitem.menubar,
GtkComboBox.combobox-entry .button {
    padding: 5px 6px;
}

.button {
	-GtkButton-image-spacing: 4;
	-GtkButton-interior-focus: true;
	-GtkButton-default-border: 0;
	-GtkButton-inner-border: 3;
	-GtkWidget-focus-line-width: 0;
	color: @theme_text_color;
	border-style: solid;
	border-color: transparent;
    transition: all 500ms ease-in-out;
}

.primary-toolbar .button,
.primary-toolbar .button:insensitive {
	background-image: none;
	background-color: transparent;
}

.primary-toolbar .button {
	border-image: none;
	border-style: solid;
	border-width: 1px 1px 2px 1px;
	border-color: transparent;
}

.primary-toolbar .button *:active,
.inline-toolbar .button *:active,
.button *:active {
	color: @theme_fg_color;
}

.button *:insensitive,
.button *:active:insensitive {
	color: @insensitive_fg_color;
}

.button .separator {
	color: shade(@internal_element_color, 1.30);
}

/*********************
 * Button background *
 *********************/

/* Button background */
.button,
.spinbutton .button,
.toolbar .button.raised,
.toolbar .raised .button,
.toolbar .button.raised:focus,
.toolbar .raised .button:focus,
.toolbar GtkComboBox .button,
.toolbar GtkComboBox .button:focus
GtkComboBox.combobox-entry .button,
.primary-toolbar GtkComboBox.combobox-entry .button,
GtkColorChooserWidget #add-color-button {
	background-image: -gtk-gradient(linear, left top, left bottom, from(@button_gradient), to(@button_gradient));
	background-color: transparent;
}

/* Pushed button background */
.button:active,
.button:active:hover,
.spinbutton .button:active,
.spinbutton .button:active:hover,
.toolbar .button:active,
.toolbar .button:active:hover,
.toolbar .button.raised:active,
.toolbar .raised .button:active,
.toolbar .button.raised:active:hover,
.toolbar .raised .button:active:hover,
.primary-toolbar GtkComboBox.combobox-entry .button:active,
GtkComboBox.combobox-entry .button:active,
.primary-toolbar .button:active,
.primary-toolbar .button:active:hover,
.inline-toolbar .button:active,
.inline-toolbar .button:active:hover {
	background-image: linear-gradient(to bottom, @button_hg2, @button_hg2);
	background-color: transparent;
	border-color: #dcdcdc;
}

.trough,
.trough.highlight,
.trough row,
.trough row:hover {
	background-image: linear-gradient(to bottom, @trough_gradient_a, @trough_gradient_b 4px);
}

.trough.vertical {
	background-image: linear-gradient(to right, @trough_gradient_a, @trough_gradient_b 4px);
}

/* Prelit button background */
.button:hover,
.spinbutton .button:hover,
.toolbar .button:hover,
.toolbar .button.raised:hover,
.toolbar .raised .button:hover,
.toolbar GtkComboBox .button:hover,
.primary-toolbar .button:hover,
GtkComboBox.combobox-entry .button:hover,
.primary-toolbar GtkComboBox.combobox-entry .button:hover,
GtkColorChooserWidget #add-color-button:hover {
	background-color: transparent;
	background-image: linear-gradient(to bottom, @button_hg1, @button_hg1);
}

/* Insensitive button background */
.button:insensitive,
.toolbar GtkComboBox .button:insensitive,
GtkComboBox.combobox-entry .button:insensitive {
	background-image: linear-gradient(to bottom, @core_color_b 1px, shade(@core_color_b, 0.96));
	background-color: @insensitive_bg_color;
}

/* Pushed + Insensitive button background */
.button:active:insensitive,
.toolbar .button:active:insensitive,
.toolbar GtkComboBox .button:active:insensitive {
	background-image: linear-gradient(to bottom, shade(@core_color_b, 0.98), shade(@core_color_b, 0.96));
	background-color: transparent;
}

/*****************
 * GtkSpinButton *
 *****************/

.spinbutton .button,
.spinbutton .button:focus {
	color: @internal_element_color;
	padding: 2px 6px;
	border-width: 0 0 0 1px;
	border-radius: 0;
	border-style: solid;
	border-color: @border_color;
	border-image: none;
}

.spinbutton .button {
	background-color: transparent;
}

.spinbutton .button:insensitive {
	color: @internal_element_insensitive_color;
}

.spinbutton .button:active,
.spinbutton .button:active:focus,
.spinbutton .button:hover {
	color: @internal_element_hover_color;
}

.spinbutton .button:first-child {
	border-radius: 2px 0 0 2px;
}

.spinbutton .button:last-child {
	border-radius: 0 2px 2px 0;
}

/**************
 * ComboBoxes *
 **************/

GtkComboBox {
	padding: 0;
	-GtkComboBox-arrow-scaling: 0.5;
	-GtkComboBox-shadow-type: none;
}

GtkComboBox *:insensitive {
	color: @insensitive_fg_color;
}

GtkComboBox .separator {
	/* always disable separators */
	-GtkWidget-wide-separators: true;
	-GtkWidget-horizontal-separator: 0;
	-GtkWidget-vertical-separator: 0;
}

GtkComboBox.combobox-entry .entry:first-child,
GtkComboBox.combobox-entry .button:first-child {
	border-image-width: 3px 0 4px 3px;
	border-radius: 3px 0 0 3px;
	border-right-width: 0;
}

GtkComboBox.combobox-entry .entry:last-child,
GtkComboBox.combobox-entry .button:last-child {
	border-image-width: 3px 3px 4px 0;
	border-radius: 0 3px 3px 0;
	border-left-width: 0;
}

GtkComboBox.combobox-entry .button:last-child {
	border-image-width: 3px 3px 4px 2px;
}

.primary-toolbar GtkComboBox.combobox-entry .entry:first-child,
.primary-toolbar GtkComboBox.combobox-entry .button:first-child {
	border-image-width: 4px 0 4px 4px;
	border-radius: 3px 0 0 3px;
	border-right-width: 0;
}

.primary-toolbar GtkComboBox.combobox-entry .entry:last-child,
.primary-toolbar GtkComboBox.combobox-entry .button:last-child {
	border-image-width: 4px 4px 4px 0;
	border-radius: 0 3px 3px 0;
	border-left-width: 0;
}

GtkComboBox.combobox-entry .button *:active,
GtkComboBox.combobox-entry .button *:active:hover {
	color: @theme_text_color;
}

GtkComboBox .button {
	color: @internal_element_color;
}

GtkComboBox .button *:hover {
	color: @theme_text_color;
}

/**************
 * Separators *
 **************/

.separator {
	border-width: 1px;
   	border-style: solid;
   	border-image: none;
   	border-color: shade(@theme_base_color, 0.92);
   	border-bottom-color: alpha(shade(@theme_base_color, 0.26), 0.6);
   	border-right-color: alpha(shade(@theme_base_color, 1.0), 0.6);
}

GtkTreeView.view.separator,
GtkTreeView.separator,
.separator,
.separator:hover {
   	color: shade(@theme_base_color, 0.82);
}

.separator.horizontal {
   	border-width: 1px 0 1px 0;
}

.separator.vertical {
   	border-width: 0 1px 0 1px;
}

.menuitem.separator {
   	-GtkMenuItem-horizontal-padding: 12px;
   	border: none;
   	color: @theme_selected_bg_color;
}

GtkTreeMenu .menuitem.separator,
.toolbar .primary-toolbar .menuitem.separator,
GtkMenuToolButton .menuitem.separator,
.primary-toolbar .button .menuitem.separator,
.menuitem.separator {
	border-color: shade(@theme_selected_bg_color, 0.99);
	border-bottom-color: alpha(@theme_selected_bg_color, 0.5);
    border-right-color: alpha(@theme_selected_bg_color, 0.5);
}

.toolbar .menuitem.separator,
GtkComboBox .menuitem.separator {
    border-color: shade(@theme_base_color, 0.92);
    border-bottom-color: alpha(@theme_base_color, 0.6);
    border-right-color: alpha(@theme_base_color, 0.6);
}

/***********
 * spinner *
 ***********/

@keyframes spinner {
    0.00% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)); }

    12.5% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)); }

    25.0% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)); }

    37.5% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)); }

    50.0% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)); }

    62.5% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)); }

    75.0% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)); }

    87.5% { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)); }

    100%  { background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.875)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.750)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.625)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.500)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.375)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.250)), to(transparent)),
                              -gtk-gradient(radial, center center, 0, center center, 0.5, to(alpha(currentColor, 0.125)), to(transparent)); }
}

.spinner {
    background-color: transparent;
    background-image: -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent)),
                      -gtk-gradient(radial, center center, 0, center center, 0.5, to(currentColor), to(transparent));
    background-position: 14% 14%, 0% 50%, 14% 86%, 50% 100%, 86% 86%, 100% 50%, 86% 14%, 50% 0%;
    background-size: 20% 20%;
    background-repeat: no-repeat;
}

.menu .spinner,
.menu .spinner:hover,
.primary-toolbar .spinner,
.primary-toolbar .spinner,
.menubar.toolbar .spinner,
.menubar.toolbar .spinner,
.header-bar .spinner,
.header-bar .spinner {
    color: @theme_selected_bg_color;
    border: none;
    box-shadow: none;
}

.spinner:active {
    animation: spinner 1s infinite linear;
}

